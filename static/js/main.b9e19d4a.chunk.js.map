{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","completed","findIdAndUpdate","bind","assertThisInitialized","event","xhttp2","XMLHttpRequest","self","id","target","parentNode","onreadystatechange","readyState","status","setState","console","log","responseText","open","setRequestHeader","send","JSON","stringify","className","react_default","a","createElement","type","name","value","onClick","deleteAJAX","text","Component","NewTodo","onSubmit","addTodo","input","onChange","App","todos","todo","parse","sort","b","localeCompare","preventDefault","data","concat","toConsumableArray","remainingTodos","filter","_this2","src_NewTodo_0","map","src_Todo_0","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b9e19d4a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\n// Component containing HTML for a single Todo\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      completed: this.props.completed\n    }\n\n    this.findIdAndUpdate = this.findIdAndUpdate.bind(this);\n  }\n\n  findIdAndUpdate(event) {\n    var xhttp2 = new XMLHttpRequest();\n\n    var self = this;\n    var id = event.target.parentNode.id;\n    \n    var data = {\n      completed: true\n    };\n\n    xhttp2.onreadystatechange = function() {\n      if (xhttp2.readyState === 4 && xhttp2.status === 200) {\n        //retrieveAJAX();\n        // self.state.complete = !(self.state.complete);\n        self.setState({\n          completed: true\n        })\n      }\n      else if (this.readyState === 4) {\n        console.log(this.responseText);\n      }\n    };\n\n    xhttp2.open(\"PUT\", \"https://api.kraigh.net/todos/\"+ id);\n    xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp2.setRequestHeader(\"x-api-key\", \"9b99af89b8927089828bb405cb26692c2640e47a89638e3b1cb55dcd7f813c99\");\n    xhttp2.send(JSON.stringify(data));\n  }\n\n  render() {\n    var className = \"todo\";\n    if (this.state.completed) {\n      className = \"todo_completed\";\n    }\n    return(\n      <div className={className}>\n        <div id={this.props.id}>\n          <input type=\"checkbox\" name=\"complete\" value=\"Done\" id=\"complete\" onClick={this.findIdAndUpdate}></input>\n          <button type=\"button\" name=\"delete\" id=\"delete\" onClick={this.props.deleteAJAX}>Delete</button>\n          <div>{this.props.text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\n// Component containing the form for a new Todo\n\nclass NewTodo extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <form id=\"entryForm\" onSubmit={this.props.addTodo}>\n          New ToDo: <input type=\"text\" id=\"textEntry\" value={this.props.input} onChange={this.props.onChange}></input>\n          <button type=\"submit\" id=\"textSubmit\" >Add</button>\n        </form>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\n// Component that does initial setup and composes your other components\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      todos: [],\n      input: ''\n    }\n\n    this.addTodo = this.addTodo.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.deleteAJAX = this.deleteAJAX.bind(this);\n  }\n\n  componentDidMount() {\n    var self = this;\n    var xhttp2 = new XMLHttpRequest();\n\n    xhttp2.onreadystatechange = function() {\n      if (xhttp2.readyState === 4 && xhttp2.status === 200) {\n        var todo = JSON.parse(xhttp2.responseText);\n\n        todo.sort(function (a, b) {\n          return a.text.localeCompare(b.text);\n        });\n\n        self.setState({todos: todo});\n\n        console.log(todo);\n      }\n    };\n\n    xhttp2.open(\"GET\", \"https://api.kraigh.net/todos\", true);\n\n    xhttp2.setRequestHeader(\"x-api-key\", \"9b99af89b8927089828bb405cb26692c2640e47a89638e3b1cb55dcd7f813c99\");\n    xhttp2.send();\n  }\n\n  onChange(event) {\n    // Set the state to the value of the input\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  addTodo(event) {\n      event.preventDefault();\n      var self = this;\n      console.log(\"clicked\");\n      // const newTodoText = self.state.input;\n      var data = {\n        text: this.state.input\n      }\n\n      var xhttp2 = new XMLHttpRequest();\n\n      xhttp2.onreadystatechange = function() {\n        if (this.readyState === 4 && this.status === 200) {\n          // var todo = JSON.parse(this.responseText);\n          //console.log(todo);\n          // retrieveAJAX();\n          self.setState({\n            todos: [...self.state.todos, JSON.parse(this.responseText)]\n          });\n\n          self.state.todos.sort(function (a, b) {\n            return a.text.localeCompare(b.text);\n          });\n\n          self.setState({input: ''});\n        }\n        else if (this.readyState === 4) {\n          console.log(this.responseText);\n        }\n      };\n\n      xhttp2.open(\"POST\", \"https://api.kraigh.net/todos\", true);\n\n      xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp2.setRequestHeader(\"x-api-key\", \"9b99af89b8927089828bb405cb26692c2640e47a89638e3b1cb55dcd7f813c99\");\n      xhttp2.send(JSON.stringify(data));\n  }\n\n  deleteAJAX(event) {\n    console.log(\"gets in delete\");\n    var xhttp2 = new XMLHttpRequest();\n    var id = event.target.parentNode.id;\n    var self = this;\n    xhttp2.onreadystatechange = function() {\n      if (this.readyState === 4 && this.status === 200) {\n        // var todo = JSON.parse(this.responseText);\n        //console.log(todo);\n        const remainingTodos = self.state.todos.filter((todo) => {\n          // Looping through all todos, if the id of the current todo DOES NOT equal the id of the todo we want to delete, keep it\n          if (todo.id !== id) {\n            return todo;\n          }\n        });\n        console.log(remainingTodos);\n        self.setState({\n          todos: remainingTodos\n        });\n      }\n      else if (self.readyState === 4) {\n        console.log(this.responseText);\n      }\n    };\n\n    xhttp2.open(\"DELETE\", \"https://api.kraigh.net/todos/\"+id);\n    xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp2.setRequestHeader(\"x-api-key\", \"9b99af89b8927089828bb405cb26692c2640e47a89638e3b1cb55dcd7f813c99\");\n    xhttp2.send();\n  }\n\n  render() {\n    return (\n      <div id=\"newTodos\">\n        <NewTodo addTodo={this.addTodo} onChange={this.onChange} input={this.state.input}/>\n        {this.state.todos.map((todo) =>\n          <Todo key={todo.id} id={todo.id} completed={todo.completed}\n            text={todo.text} deleteAJAX={this.deleteAJAX}/>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}